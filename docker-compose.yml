version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8081:8080"  # Kafka UI использует порт 8080 внутри контейнера
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"  # API MinIO
      - "9001:9001"  # Веб-консоль MinIO
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_API_REQUESTS_MAX: "50MB"
    volumes:
      - /Users/amiraliev/volumes/minio:/data:cached
    command: server /data --console-address ":9001"

  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - /Users/amiraliev/volumes/postgres:/var/lib/postgresql/data:cached
      - /Users/amiraliev/volumes/postgresInit:/docker-entrypoint-initdb.d/init.sql
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: keycloak
    depends_on:
      - postgres
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/postgres?currentSchema=keycloak_schema
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"  # Для разработки (в проде используйте HTTPS)
    ports:
      - "8180:8080"  # Маппинг 8180 внешний → 8080 внутри контейнера
    volumes:
      - /Users/amiraliev/volumes/postgres:/opt/keycloak/data  # Для сохранения данных между перезапусками
    command: start-dev